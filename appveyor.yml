# Specify version format
version: "{build}"

# Operating system (build VM template)
os: Visual Studio 2017

# build platform, i.e. Win32 (instead of x86), x64, Any CPU. This setting is optional.
platform:
  - Win32
  - x64

environment:
  CFLAGS: "-D_WIN32_WINNT=0x0600"
  CXXFLAGS: "-D_WIN32_WINNT=0x0600"
  MSVC_DEFAULT_OPTIONS: ON
  matrix:
      - COMPILER: mingw-64
        GENERATOR: MinGW Makefiles
#      - COMPILER: msvc2017
#        GENERATOR: Visual Studio 15 2017
#        APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

# only build PR but not branch as well
skip_branch_with_pr: true

# build configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

# scripts that are called at very beginning, before repo cloning
init:
  - cmake --version
  - msbuild /version

# clone directory
clone_folder: C:\mavsdk

# scripts to run before build
before_build:
  - if "%COMPILER%"=="mingw-64" set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if "%COMPILER%"=="mingw-64" set PATH=C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin;%PATH%
  - cd C:\mavsdk
  - git submodule update --init --recursive --depth 200
  - cd C:\

build: on

build_script:
  - set CL=/MP
  - if "%COMPILER%"=="msvc2017" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - set mavsdk_dir=C:\mavsdk
  - cd %mavsdk_dir%
  - cmake -DCMAKE_BUILD_TYPE="%configuration%" -G "%GENERATOR%" -DCMAKE_INSTALL_PREFIX=%mavsdk_dir%\install -DBUILD_BACKEND=ON -DBUILD_SHARED_LIBS=OFF -DENABLE_MAVLINK_PASSTHROUGH=ON -Bbuild -H.
  - cmake --build build --target install --config %configuration%
  - cmake -G "%GENERATOR%" -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_PREFIX_PATH="%mavsdk_dir%\install;%mavsdk_dir%\build\third_party\install" -Bexample\build -Hexample
  - cmake --build example\build --config %configuration%

test: on

test_script:
  - cd %mavsdk_dir%
  - build\src\unit_tests_runner.exe
  - build\src\backend\test\unit_tests_backend.exe
